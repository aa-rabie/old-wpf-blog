<Page x:Class="VirtualizationWPF.Page1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:VirtualizationWPF"
    DataContext="{Binding RelativeSource={RelativeSource Self}}"
    Title="Page1"  Background="#292929" Foreground="#eee">
    <Page.Resources>
        <SolidColorBrush Color="#24a3bc" x:Key="blue" />
        <SolidColorBrush Color="Orange" x:Key="orange" />
        <SolidColorBrush Color="#eee" x:Key="lightGray" />

        <Style x:Key="bigText" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="Bold" />
        </Style>

        <Style x:Key="bigTextWithMargin" TargetType="TextBlock" BasedOn="{StaticResource bigText}">
            <Setter Property="Margin" Value="0,0,0,20" />
        </Style>

        <Style x:Key="bigBlueText" TargetType="TextBlock" BasedOn="{StaticResource bigText}">
            <Setter Property="Foreground" Value="{StaticResource blue}" />
        </Style>

        <Style x:Key="lightBorder" TargetType="Border">
            <Setter Property="BorderBrush" Value="{StaticResource lightGray}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="10" />
            <Setter Property="Margin" Value="0,10,0,10" />
        </Style>
    </Page.Resources>

    <StackPanel Height="800" Width="850">

        <TextBlock Text="General" Style="{StaticResource bigBlueText}" />
        <Border Style="{StaticResource lightBorder}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Grid.Resources>
                    <Style x:Key="leftTitle" TargetType="TextBlock">
                        <Style.Setters>
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="Margin" Value="0,0,10,0" />
                            <Setter Property="HorizontalAlignment" Value="Right" />
                            <Setter Property="Padding" Value="2" />
                            <Setter Property="Height" Value="25" />
                        </Style.Setters>
                    </Style>

                    <Style x:Key="middleSection" TargetType="FrameworkElement">
                        <Setter Property="Width" Value="80" />
                        <Setter Property="Margin" Value="0,2,0,2" />
                    </Style>

                    <Style x:Key="rightTextBlock" TargetType="TextBlock">
                        <Setter Property="Padding" Value="2" />
                    </Style>
                </Grid.Resources>

                <TextBlock Text="Memory usage" Style="{StaticResource leftTitle}" />
                <TextBlock Name="tbMemory" Grid.Column="1" Foreground="{StaticResource orange}" Style="{StaticResource middleSection}"/>

                <TextBlock Text="Total number of items" Grid.Row="1" Grid.Column="0" Style="{StaticResource leftTitle}"/>
                <TextBox Text="{Binding Path=NumItems}" Style="{StaticResource middleSection}" Grid.Row="1" Grid.Column="1"/>
                <TextBlock Text=" items" Grid.Row="1" Grid.Column="2" Style="{StaticResource rightTextBlock}"/>

                <TextBlock Text="Page size" Grid.Row="2" Grid.Column="0" Style="{StaticResource leftTitle}"/>
                <TextBox Text="{Binding Path=PageSize}" Style="{StaticResource middleSection}" Grid.Row="2" Grid.Column="1"/>
                <TextBlock Text=" items" Grid.Row="2" Grid.Column="2" Style="{StaticResource rightTextBlock}"/>

                <TextBlock Text="Fetch delay" Grid.Row="3" Grid.Column="0" Style="{StaticResource leftTitle}"/>
                <TextBox Text="{Binding Path=FetchDelay}" Style="{StaticResource middleSection}" Grid.Row="3" Grid.Column="1"/>
                <TextBlock Text=" milliseconds" Grid.Row="3" Grid.Column="2" Style="{StaticResource rightTextBlock}"/>

                <Rectangle Name="rectangle" Width="20" Height="20" Fill="{StaticResource blue}" Margin="15" HorizontalAlignment="Center" Grid.Row="4" Grid.ColumnSpan="3">
                    <Rectangle.RenderTransform>
                        <RotateTransform Angle="0" CenterX="10" CenterY="10"/>
                    </Rectangle.RenderTransform>
                    <Rectangle.Triggers>
                        <EventTrigger RoutedEvent="Rectangle.Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(TextBlock.RenderTransform).(RotateTransform.Angle)" From="0" To="360" Duration="0:0:5" RepeatBehavior="Forever" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Rectangle.Triggers>
                </Rectangle>

                <TextBlock Margin="5" HorizontalAlignment="Center" FontStyle="Italic" Text="A pause in the animation indicates that the UI thread is stalled." Grid.Row="6" Grid.ColumnSpan="5"/>

            </Grid>
        </Border>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <TextBlock Text="Data virtualization - Paul McClean" Style="{StaticResource bigBlueText}" />

            <Border Style="{StaticResource lightBorder}" Name="sample1" Grid.Row="1">
                <StackPanel>
                    <StackPanel.Resources>
                        <DataTemplate DataType="{x:Type local:PaulsCustomer}">
                            <StackPanel>
                                <TextBlock Text="Customer details" Style="{StaticResource bigTextWithMargin}"/>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="Id:  " FontWeight="Bold" HorizontalAlignment="Right"/>
                                    <TextBlock Text="{Binding Id}" Grid.Column="1" />
                                    <TextBlock Text="Name:  " FontWeight="Bold" Grid.Row="1"/>
                                    <TextBlock Text="{Binding Name}" Grid.Row="1" Grid.Column="1"/>
                                </Grid>
                            </StackPanel>
                        </DataTemplate>

                        <Style BasedOn="{StaticResource {x:Type ListView}}" TargetType="ListView">
                            <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
                            <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
                            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="True" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsLoading}" Value="True">
                                    <Setter Property="ListView.Cursor" Value="Wait"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Resources>

                    <StackPanel Orientation="Horizontal" Margin="10">
                        <TextBlock Text="Number of customer data items in memory: "/>
                        <TextBlock Text="{Binding Source={x:Static local:PaulsCustomer.LiveInstances}, Path=Value}" Foreground="{StaticResource orange}"/>
                    </StackPanel>

                    <Grid Margin="10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Button Click="LoadListBoxData1" Content="Load" />
                        <Button Click="ClearListBoxData1" Content="Clear" Grid.Column="1"/>
                    </Grid>

                    <ListView ItemsSource="{Binding}" Height="200" Margin="10" Name="lv1">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn DisplayMemberBinding="{Binding Id}" Header="Id" Width="100" />
                                <GridViewColumn DisplayMemberBinding="{Binding Name}" Header="Name" Width="100" />
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <ContentControl Content="{Binding ElementName=lv1, Path=SelectedItem}" Height="100" Margin="10"/>
                    <!-- The following doesn't work with Paul's solution -->
                    <!--<ContentControl Content="{Binding Path=/}" Height="100" Margin="10"/>-->
                </StackPanel>
            </Border>

            <TextBlock Text="Data virtualization - Vincent Van Den Berghe" Style="{StaticResource bigBlueText}" Grid.Column="2"/>

            <Border Style="{StaticResource lightBorder}" Name="sample2" Grid.Row="1" Grid.Column="2">
                <StackPanel>
                    <StackPanel.Resources>
                        <!-- Implicit DataTemplates don't work with Vincent's solution, so using explicit instead. -->
                        <DataTemplate x:Key="customerTemplate">
                            <StackPanel>
                                <TextBlock Text="Customer details" Style="{StaticResource bigTextWithMargin}"/>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="Id:  " FontWeight="Bold" HorizontalAlignment="Right"/>
                                    <TextBlock Text="{Binding Id}" Grid.Column="1" />
                                    <TextBlock Text="Name:  " FontWeight="Bold" Grid.Row="1"/>
                                    <TextBlock Text="{Binding Name}" Grid.Row="1" Grid.Column="1"/>
                                </Grid>
                            </StackPanel>
                        </DataTemplate>

                        <Style BasedOn="{StaticResource {x:Type ListView}}" TargetType="ListView">
                            <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
                            <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
                            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="True" />
                        </Style>
                    </StackPanel.Resources>

                    <StackPanel Orientation="Horizontal" Margin="10">
                        <TextBlock Text="Number of customer data items in memory: " />
                        <TextBlock Text="{Binding Source={x:Static local:VincentsCustomer.LiveInstances}, Path=Value}" Foreground="{StaticResource orange}" />
                    </StackPanel>

                    <Grid Margin="10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Button Click="LoadListBoxData2" Content="Load" />
                        <Button Click="ClearListBoxData2" Content="Clear" Grid.Column="1"/>
                    </Grid>

                    <ListView ItemsSource="{Binding}" Height="200"  Name="lv2" 
                          IsSynchronizedWithCurrentItem="True" GridViewColumnHeader.Click="TheView_HeaderClick" Margin="10">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn DisplayMemberBinding="{Binding Id}" Header="Id" Width="100" />
                                <GridViewColumn DisplayMemberBinding="{Binding Name}" Header="Name" Width="100" />
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <ContentControl Content="{Binding Path=/}" ContentTemplate="{StaticResource customerTemplate}" Height="100" Margin="10"/>
                </StackPanel>
            </Border>
        </Grid>
    </StackPanel>
</Page>
