#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.21006.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DVFilter
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Customers")]
	public partial class CustomersDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    #endregion
		
		public CustomersDataContext() : 
				base(global::DVFilter.Properties.Settings.Default.CustomersConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CustomersDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CustomersDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CustomersDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CustomersDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCount")]
		public ISingleResult<GetCountResult> GetCount([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BeginDate", DbType="DateTime")] System.Nullable<System.DateTime> beginDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), beginDate, endDate);
			return ((ISingleResult<GetCountResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSortedFilteredCustomers")]
		public ISingleResult<Customer> GetSortedFilteredCustomers([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartIndex", DbType="Int")] System.Nullable<int> startIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndIndex", DbType="Int")] System.Nullable<int> endIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BeginDate", DbType="DateTime")] System.Nullable<System.DateTime> beginDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderBy", DbType="VarChar(500)")] string orderBy)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startIndex, endIndex, beginDate, endDate, orderBy);
			return ((ISingleResult<Customer>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.DateTime _CustomerSince;
		
		private double _AmountPaidLocalCalls;
		
		private double _AmountPaidNationalCalls;
		
		private double _AmountPaidInternationalCalls;
		
		private int _NumberFamilyMembersInPlan;
		
		private bool _JoinedPreferredProgram;
		
		private int _Region;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnCustomerSinceChanging(System.DateTime value);
    partial void OnCustomerSinceChanged();
    partial void OnAmountPaidLocalCallsChanging(double value);
    partial void OnAmountPaidLocalCallsChanged();
    partial void OnAmountPaidNationalCallsChanging(double value);
    partial void OnAmountPaidNationalCallsChanged();
    partial void OnAmountPaidInternationalCallsChanging(double value);
    partial void OnAmountPaidInternationalCallsChanged();
    partial void OnNumberFamilyMembersInPlanChanging(int value);
    partial void OnNumberFamilyMembersInPlanChanged();
    partial void OnJoinedPreferredProgramChanging(bool value);
    partial void OnJoinedPreferredProgramChanged();
    partial void OnRegionChanging(int value);
    partial void OnRegionChanged();
    #endregion
		
		public Customer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(4000)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(4000)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerSince", DbType="DateTime NOT NULL")]
		public System.DateTime CustomerSince
		{
			get
			{
				return this._CustomerSince;
			}
			set
			{
				if ((this._CustomerSince != value))
				{
					this.OnCustomerSinceChanging(value);
					this.SendPropertyChanging();
					this._CustomerSince = value;
					this.SendPropertyChanged("CustomerSince");
					this.OnCustomerSinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountPaidLocalCalls", DbType="Float NOT NULL")]
		public double AmountPaidLocalCalls
		{
			get
			{
				return this._AmountPaidLocalCalls;
			}
			set
			{
				if ((this._AmountPaidLocalCalls != value))
				{
					this.OnAmountPaidLocalCallsChanging(value);
					this.SendPropertyChanging();
					this._AmountPaidLocalCalls = value;
					this.SendPropertyChanged("AmountPaidLocalCalls");
					this.OnAmountPaidLocalCallsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountPaidNationalCalls", DbType="Float NOT NULL")]
		public double AmountPaidNationalCalls
		{
			get
			{
				return this._AmountPaidNationalCalls;
			}
			set
			{
				if ((this._AmountPaidNationalCalls != value))
				{
					this.OnAmountPaidNationalCallsChanging(value);
					this.SendPropertyChanging();
					this._AmountPaidNationalCalls = value;
					this.SendPropertyChanged("AmountPaidNationalCalls");
					this.OnAmountPaidNationalCallsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountPaidInternationalCalls", DbType="Float NOT NULL")]
		public double AmountPaidInternationalCalls
		{
			get
			{
				return this._AmountPaidInternationalCalls;
			}
			set
			{
				if ((this._AmountPaidInternationalCalls != value))
				{
					this.OnAmountPaidInternationalCallsChanging(value);
					this.SendPropertyChanging();
					this._AmountPaidInternationalCalls = value;
					this.SendPropertyChanged("AmountPaidInternationalCalls");
					this.OnAmountPaidInternationalCallsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberFamilyMembersInPlan", DbType="Int NOT NULL")]
		public int NumberFamilyMembersInPlan
		{
			get
			{
				return this._NumberFamilyMembersInPlan;
			}
			set
			{
				if ((this._NumberFamilyMembersInPlan != value))
				{
					this.OnNumberFamilyMembersInPlanChanging(value);
					this.SendPropertyChanging();
					this._NumberFamilyMembersInPlan = value;
					this.SendPropertyChanged("NumberFamilyMembersInPlan");
					this.OnNumberFamilyMembersInPlanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinedPreferredProgram", DbType="Bit NOT NULL")]
		public bool JoinedPreferredProgram
		{
			get
			{
				return this._JoinedPreferredProgram;
			}
			set
			{
				if ((this._JoinedPreferredProgram != value))
				{
					this.OnJoinedPreferredProgramChanging(value);
					this.SendPropertyChanging();
					this._JoinedPreferredProgram = value;
					this.SendPropertyChanged("JoinedPreferredProgram");
					this.OnJoinedPreferredProgramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="Int NOT NULL")]
		public int Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetCountResult
	{
		
		private System.Nullable<int> _Count;
		
		public GetCountResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
